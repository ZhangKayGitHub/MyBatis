<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="jdbcConfig.properties">
    </properties>
    <!--
    mybatis中的延迟加载
	问题：在一对多的中，我们有一个用户，他有100个账户。
		在查询用户的时候，要不要把关联的账户查出来？
		在查询账户的时候，要不要把关联的用户查出来？

		在查询用户时，用户的账户信息应该是，什么时候使用，什么时候查询的。
		在查询账户时，账户的所属用户信息应该时随着账户查询时一起查询出来的。
	什么时延迟加载
		在真正使用数据时才发起查询，不用的时候不查询，按需加载（懒加载）
	什么时立即加载
		不管用不用，只要一调用方法，马上发起查询。
	在对应的四种关系中：一对多，多对一，一对一，多对多
		一对多，多对多 ：通常情况下我们都是采用延迟加载。
		多对一，一对一 ：通常情况下我们都是采用立即加载。
    -->
    <!--配置参数-->
    <settings>
        <!--延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态。-->
        <!--开启mybatis支持延迟加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--当启用时，对任意延迟属性的调用会使带有延迟加载属性的对象完整加载；反之，每种属性将会按需加载。-->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>
    <!--使用typeAliases配置别名，它只能配置domain中的类的别名-->
    <typeAliases>
        <package name="com.kay.domain"></package>
    </typeAliases>
    <!--配置环境-->
    <environments default="mysql">
        <!--配置MySQL的环境-->
        <environment id="mysql">
            <!--配置事务-->
            <transactionManager type="JDBC"></transactionManager>
            <!--配置连接池-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--配置映射文件的位置-->

    <mappers>
        <package name="com.kay.dao"></package>
    </mappers>
</configuration>
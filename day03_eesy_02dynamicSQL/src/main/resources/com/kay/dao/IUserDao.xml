<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kay.dao.IUserDao">

    <resultMap id="userMap" type="user">
        <!--主键字段的对应-->
        <id property="userid" column="id"></id>
        <!--非主键字段的对应-->
        <result property="username" column="username"></result>
        <result property="useraddress" column="address"></result>
        <result property="usersex" column="sex"></result>
        <result property="userbirthday" column="birthday"></result>
    </resultMap>

    <!--我们发现下边的语句都大致相同，因此可以抽取重复的标签-->
    <sql id="defautUser">
        select * from user
        <!--下边的标签中就可以引入上边的语句作为sql语句的一部分-->
    </sql>



    <select id="findAll" resultMap="userMap">
        <!--select * from user 引入上边定义的sql语句-->
        <include refid="defautUser"></include>
    </select>
    <!--保存用户-->

    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="INT" resultType="user">
        select * from user where id=#{uid}
    </select>

    <!--根据名称模糊查询-->
    <select id="findByName" parameterType="String" resultType="user" >
        select * from user where username like #{name}
    </select>

    <!--根据QueryVo 的条件查询用户 (ognl表达式的用法)-->
    <select id="findUserByVo" parameterType="com.kay.domain.QueryVo" resultType="user">
        select * from user where username like #{user.username}<!--user是QueryVo的一个属性,username是QueryVo的getUsername()方法-->
    </select>
    <!--根据条件查询-->
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        <!--select * from user where 1=1 --><!--后边不要带分号否者于后边的判断就不是一条SQL语句了-->
        <!--
        <if test="username != null">
            and username = #{username}
        </if>
        <if test="usersex != null">
            and sex = #{usersex}
        </if>
        -->
        select * from user
        <where><!--使用where标签可以替代上边注释掉的select语句后边的where 1=1 的语句-->
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="usersex != null">
                and sex = #{usersex}
            </if>
        </where>
    </select>
    <!--根据queryVo中的id集合实现查询用户列表-->
    <select id="findUserInIds" resultMap="userMap" parameterType="com.kay.domain.QueryVo">
        select * from user
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=","><!--item属性的值必须于下边#{}中的内容保持一致-->
                  #{uid}
                </foreach>
            </if>
        </where>
    </select>

</mapper>
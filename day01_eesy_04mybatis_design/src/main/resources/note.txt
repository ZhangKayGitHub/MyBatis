MyBatis:
简单的说：
        就是把数据库表和实体类及实体类的属性对应起来
        让我们可以操作实体类就实现操作数据库表。
        注意：
            实体类的属性和数据库的字段名称保持一致。
MyBatis的入门
    mybatis的环境搭建：
        第一步：创建maven工程并导入坐标
        第二步：创建实体类和dao的接口
        第三步：创建mybatis的主配置文件
                SqlMapConfig.xml（需要导入配置文件的约束）
        第四步：创建映射配置文件
                IUserDao.xml（也需要导入配置文件的约束）
    环境搭建注意事项：
        第一个：创建IUserDao.xml 和 IUserDao.java 时名称是为了和我们之前的知识保持一致。
                在Mybatis中它把持久层的操作接口名称和映射文件也叫做：Mapper
                所以：IUserDao 和 IUserMapper 是一样的
        第二个：在idea中创建目录的时候，它和包是不一样的
                包在创建时：com.kay.dao它时三级结构
                目录在创建时：com.kay.dao时一级目录
        第三个：mybatis的映射配置文件的位置必须和dao接口的包的结构一致
        第四个：映射配置文件的mapper标签namepace属性的取值必须时dao接口的全限定类名
        第五个：映射配置文件的操作配置(select) ，id属性的取值必须时dao接口的方法名

        当我们准从第三、四、五点之后，我们在开发中无需再写dao的实现类

    mybatis的入门案例：
        第一步：读取配置文件
        第二步：创建SqlSessionFactory工厂
        第三步：创建SqlSession
        第四步：创建Dao接口的代理对象
        第五步：执行dao中的方法
        第六步：释放资源

        注意事项：
            不要忘记在映射配置中告知mybatis要分装到哪个实体类中
            配置的方式：指定实体类的全限定类名
自定义Mybatis 的分析：
        mybatis 在使用代理dao 的方式实现增删改查时做了什么事呢？
            只有两件事情：
                第一：创建代理对象
                第二：在d代理对象里面调用selectList

        自定义mybatis能够通过入门教程看到的类：
                class Resources
                class SqlSessionFactoryBuilder
                interface SqlSessionFactory
                interface SqlSession

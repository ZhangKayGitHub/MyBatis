<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kay.dao.IUserDao">
    <select id="findAll" resultType="com.kay.domain.User">
        select  * from user
    </select>
    <!--保存用户-->
    <insert id="saveUser" parameterType="com.kay.domain.User">
        <!--配置插入数据后，获取插入数据的id,其中 keyProperty 对应实体类的id，keyColumn对应的是表中的属性
        resultType对应的返回值类型，order是限制性还是后执行该语句—— AFTER 代表的是在插入之后执行 -->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert  into user(username,address,sex,birthday)values(#{username} ,#{address},#{sex},#{birthday})
    </insert>
    <!--更新用户-->
    <update id="updateUser" parameterType="com.kay.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{ldsfkjak}<!--此处知识占位符-->
    </delete>
    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="INT" resultType="com.kay.domain.User">
        select * from user where id=#{uid}
    </select>

    <!--根据名称模糊查询-->
    <select id="findByName" parameterType="String" resultType="com.kay.domain.User" >
        select * from user where username like #{name}

    </select>
    <!--使用聚合函数获得用户的总记录条数-->
    <select id="findTotal" resultType="int">
        select count(id) from user
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kay.dao.IUserDao">

    <resultMap id="userMap" type="user">
        <!--主键字段的对应-->
        <id property="userid" column="id"></id>
        <!--非主键字段的对应-->
        <result property="username" column="username"></result>
        <result property="useraddress" column="address"></result>
        <result property="usersex" column="sex"></result>
        <result property="userbirthday" column="birthday"></result>

</resultMap>
        <select id="findAll" resultMap="userMap">
        select  * from user

    </select>
    <!--保存用户-->
    <insert id="saveUser" parameterType="User">
        <selectKey keyProperty="userid" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert  into user(username,address,sex,birthday)values(#{username} ,#{useraddress},#{usersex},#{userbirthday})
    </insert>
    <!--更新用户-->
    <update id="updateUser" parameterType="com.kay.domain.User">
        update user set username=#{username},address=#{useraddress},sex=#{usersex},birthday=#{userbirthday} where id=#{userid}
    </update>
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{ldsfkjak}<!--此处知识占位符-->
    </delete>
    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="INT" resultType="com.kay.domain.User">
        select id as userid,username as userName,address as useraddress,sex as usersex,birthday as userbirthday from user where id=#{uid}
    </select>

    <!--根据名称模糊查询-->
    <select id="findByName" parameterType="String" resultType="com.kay.domain.User" >
        select id as userid,username as userName,address as useraddress,sex as usersex,birthday as userbirthday from user where username like #{name}
    </select>
    <!--使用聚合函数获得用户的总记录条数-->
    <select id="findTotal" resultType="int">
        select count(id) from user
    </select>

    <!--根据QueryVo 的条件查询用户 (ognl表达式的用法)-->
    <select id="findUserByVo" parameterType="com.kay.domain.QueryVo" resultType="com.kay.domain.User">
        select * from user where username like #{user.username}<!--user是QueryVo的一个属性,username是QueryVo的getUsername()方法-->
    </select>
</mapper>